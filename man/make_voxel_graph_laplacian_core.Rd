% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_spatial_smoothing.R,
%   R/core_voxelfit_engine.R
\name{make_voxel_graph_laplacian_core}
\alias{make_voxel_graph_laplacian_core}
\title{Construct Graph Laplacian for Voxel Coordinates (Core)}
\usage{
make_voxel_graph_laplacian_core(
  voxel_coords_matrix,
  num_neighbors_Lsp = 6,
  distance_engine = c("euclidean", "ann_euclidean"),
  ann_threshold = 10000
)

make_voxel_graph_laplacian_core(
  voxel_coords_matrix,
  num_neighbors_Lsp = 6,
  distance_engine = c("euclidean", "ann_euclidean"),
  ann_threshold = 10000
)
}
\arguments{
\item{voxel_coords_matrix}{V x 3 matrix of voxel coordinates}

\item{num_neighbors_Lsp}{number of nearest neighbours}
\item{distance_engine}{Choice of distance computation engine. "euclidean" uses
exact search while "ann_euclidean" relies on approximate nearest neighbours via
the \pkg{RcppHNSW} package. If the package is not installed, this option falls
back to the exact search with a warning.}
\item{ann_threshold}{When \code{distance_engine = "euclidean"}, datasets with a
number of voxels larger than this threshold automatically use the approximate
engine if \pkg{RcppHNSW} is available.}
}
\value{
L_sp_sparse_matrix A V x V sparse Laplacian matrix (Matrix::sparseMatrix)

sparse V x V graph Laplacian matrix
}
\description{
Creates a sparse graph Laplacian matrix for spatial smoothing based on
k-nearest neighbors in 3D voxel space.
}
\details{
This function implements Component 2, Step 1 of the M-HRF-LSS pipeline.
It constructs a k-nearest neighbor graph from voxel coordinates and computes
the normalized graph Laplacian L = D - W, where W is the adjacency matrix
and D is the degree matrix. The resulting Laplacian is used for spatial
smoothing of manifold coordinates.
If \code{distance_engine = "ann_euclidean"} is requested but the
\pkg{RcppHNSW} package is not installed, the function falls back to the exact
search and issues a warning.
}
\examples{
\dontrun{
# Create example 3D grid of voxels
coords <- expand.grid(x = 1:10, y = 1:10, z = 1:5)
voxel_coords <- as.matrix(coords)

# Construct 6-neighbor Laplacian (face-connected)
L_sparse <- make_voxel_graph_laplacian_core(voxel_coords, num_neighbors_Lsp = 6)

# Construct 26-neighbor Laplacian (corner-connected)
L_sparse_full <- make_voxel_graph_laplacian_core(voxel_coords, num_neighbors_Lsp = 26)
}

}

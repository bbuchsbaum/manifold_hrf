% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/voxel_fit_core.R
\name{apply_intrinsic_identifiability_core}
\alias{apply_intrinsic_identifiability_core}
\title{Apply intrinsic identifiability constraints}
\usage{
apply_intrinsic_identifiability_core(
  Xi_raw_matrix,
  Beta_raw_matrix,
  B_reconstructor_matrix,
  h_ref_shape_vector,
  ident_scale_method = "l2_norm",
  ident_sign_method = "canonical_correlation",
  zero_tol = 1e-08,
  correlation_threshold = 0.001,
  Y_proj_matrix = NULL,
  X_condition_list_proj_matrices = NULL,
  consistency_check = FALSE,
  n_jobs = 1,
  verbose = FALSE
)

apply_intrinsic_identifiability_core(
  Xi_raw_matrix,
  Beta_raw_matrix,
  B_reconstructor_matrix,
  h_ref_shape_vector,
  ident_scale_method = "l2_norm",
  ident_sign_method = "canonical_correlation",
  zero_tol = 1e-08,
  correlation_threshold = 0.001,
  Y_proj_matrix = NULL,
  X_condition_list_proj_matrices = NULL,
  consistency_check = FALSE,
  n_jobs = 1,
  verbose = FALSE
)
}
\arguments{
\item{Xi_raw_matrix}{The m x V raw manifold coordinates from extract_xi_beta_raw_svd_core}

\item{Beta_raw_matrix}{The k x V raw condition amplitudes from extract_xi_beta_raw_svd_core}

\item{B_reconstructor_matrix}{The p x m HRF reconstructor matrix}

\item{h_ref_shape_vector}{The p x 1 reference HRF shape (e.g., canonical HRF)}

\item{ident_scale_method}{Scaling method: "l2_norm" (unit length), "max_abs_val"
(peak = 1), or "none"}

\item{ident_sign_method}{Sign alignment method: "canonical_correlation" (align with
reference) or "data_fit_correlation" (requires additional data, not implemented)}

\item{zero_tol}{Numeric tolerance for treating a reconstructed HRF as zero
when applying scale normalization. If the L2 norm (for "l2_norm") or
maximum absolute value (for "max_abs_val") of a voxel's HRF is below this
threshold, both \code{Xi_ident_matrix} and \code{Beta_ident_matrix} are set
to zero for that voxel.}

\item{correlation_threshold}{Numeric threshold for canonical correlation
(default 1e-3). When the absolute correlation between a voxel's HRF and
the reference HRF falls below this threshold, the sign is determined
using the RMS rule (sign of sum of HRF values) instead.}

\item{consistency_check}{Logical; if TRUE, the reconstructed HRF is
re-projected after sign/scale alignment and verified against the
canonical shape. Voxels failing the check are flipped to ensure
consistent orientation.}

\item{n_jobs}{Number of parallel jobs for voxel processing (default 1).
Only used when ident_sign_method = "data_fit_correlation".}

\item{verbose}{Logical; if TRUE, print progress messages for each voxel.
Default FALSE to avoid message spam.}
}
\value{
list with Xi_ident_matrix and Beta_ident_matrix

A list containing:
\itemize{
\item \code{Xi_ident_matrix}: m x V matrix of identifiability-constrained manifold coordinates
\item \code{Beta_ident_matrix}: k x V matrix of identifiability-constrained condition amplitudes
}
}
\description{
Applies sign and scale constraints to ensure identifiability of HRF estimates.
}
\details{
This function implements Component 1, Step 5 of the M-HRF-LSS pipeline.
It ensures that HRF estimates are identifiable by:
\enumerate{
\item Aligning sign with a reference HRF (avoiding arbitrary sign flips)
\item Normalizing scale consistently across voxels
The chosen sign alignment method is reported via \code{message()}.
If the absolute correlation with the canonical HRF is below
\code{1e-3}, a warning is issued and the sign is determined using
the RMS rule (sign of the sum of the HRF). When
\code{consistency_check = TRUE}, each voxel's HRF is reprojected and the
alignment with the canonical shape is reverified.
The beta amplitudes are adjusted inversely to preserve the overall signal.
Voxels whose reconstructed HRFs fall below \code{zero_tol} are zeroed in
both returned matrices.
}
}
\examples{
\dontrun{
# After SVD extraction
m <- 5
k <- 3
V <- 100
p <- 30

# Get raw Xi and Beta from SVD
svd_result <- extract_xi_beta_raw_svd_core(gamma, m, k)

# Apply identifiability with canonical HRF reference
h_canonical <- c(0, 0.8, 1, 0.7, 0.3, rep(0, p-5))  # simplified canonical
ident_result <- apply_intrinsic_identifiability_core(
  svd_result$Xi_raw_matrix,
  svd_result$Beta_raw_matrix,
  B_reconstructor,
  h_canonical
)
}

}

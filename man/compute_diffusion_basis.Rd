% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_manifold_construction_refactored.R
\name{compute_diffusion_basis}
\alias{compute_diffusion_basis}
\title{Compute Diffusion Map Basis from Affinity Matrix}
\usage{
compute_diffusion_basis(
  affinity,
  n_dims = "auto",
  min_variance = 0.95,
  return_basis = TRUE,
  L_library_matrix = NULL
)
}
\arguments{
\item{affinity}{An object of class 'manifold_affinity' from build_manifold_affinity}

\item{n_dims}{Number of dimensions to compute. Can be an integer or "auto"}

\item{min_variance}{For n_dims="auto", minimum cumulative variance to retain}

\item{return_basis}{Whether to compute the HRF reconstructor matrix}

\item{L_library_matrix}{Required if return_basis=TRUE. Original HRF library matrix}
}
\value{
A list object of class 'diffusion_basis' containing:
\itemize{
\item \code{eigenvalues}: Vector of eigenvalues
\item \code{eigenvectors}: Matrix of eigenvectors (N x n_dims)
\item \code{n_dims}: Number of dimensions used
\item \code{B_reconstructor}: Optional HRF reconstructor matrix (p x n_dims)
\item \code{affinity}: Original affinity object for provenance
}
}
\description{
Computes the diffusion map embedding from a manifold affinity object,
with proper handling of the symmetric eigendecomposition.
}
\details{
This function correctly handles the eigendecomposition based on
the normalization method used in the affinity matrix:
\itemize{
\item For symmetric normalization: Uses RSpectra::eigs_sym for efficiency
\item For row-stochastic: Uses standard eigendecomposition
\item Always checks for complex eigenvalues and warns appropriately
}
}

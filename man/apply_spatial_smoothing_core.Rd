% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_spatial_smoothing.R
\name{apply_spatial_smoothing_core}
\alias{apply_spatial_smoothing_core}
\title{Apply Spatial Smoothing to Manifold Coordinates (Core)}
\usage{
apply_spatial_smoothing_core(
  Xi_ident_matrix,
  L_sp_sparse_matrix,
  lambda_spatial_smooth
)
}
\arguments{
\item{Xi_ident_matrix}{The m x V matrix of identifiability-constrained manifold
coordinates from Component 1, where m is manifold dimensionality and V is
number of voxels}

\item{L_sp_sparse_matrix}{The V x V sparse graph Laplacian matrix from
make_voxel_graph_laplacian_core}

\item{lambda_spatial_smooth}{Spatial smoothing strength parameter (scalar).
Higher values produce more smoothing. When lambda = 0, returns the
original coordinates without smoothing.}
}
\value{
Xi_smoothed_matrix The m x V matrix of spatially smoothed manifold
coordinates
}
\description{
Spatially smooths manifold coordinates across voxels using a graph Laplacian
regularization approach.
}
\details{
This function implements Component 2, Step 2 of the M-HRF-LSS pipeline.
For each manifold dimension, it solves the regularization problem:
(I + lambda * L) * xi_smooth = xi_ident
This encourages nearby voxels to have similar manifold coordinates while
preserving the overall structure. The identity matrix ensures the solution
remains close to the original coordinates.
}
\examples{
\dontrun{
# Example with synthetic data
m <- 5   # manifold dimensions
V <- 100 # voxels

# Create example manifold coordinates
Xi_ident <- matrix(rnorm(m * V), m, V)

# Create simple grid coordinates
coords <- expand.grid(x = 1:10, y = 1:10, z = 1)
voxel_coords <- as.matrix(coords[seq_len(V), ])

# Create Laplacian
L_sparse <- make_voxel_graph_laplacian_core(voxel_coords, num_neighbors_Lsp = 8)

# Apply smoothing
Xi_smoothed <- apply_spatial_smoothing_core(Xi_ident, L_sparse, lambda_spatial_smooth = 0.1)
}

}
